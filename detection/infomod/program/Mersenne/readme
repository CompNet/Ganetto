README for Mersenne Twister distribution
Richard J. Wagner  12 July 2001

Instructions
------------

The only necessary file for using this Mersenne Twister random number
generator is "MersenneTwister.h".  The class name is MTRand.

Usage examples are in "example.cpp".  Linux or Unix users can type "make"
to compile and then type "./example" to run the example program.

To test the output and compare to other random number generators type
"make test".

When you are done with testing, type "make clean" to get rid of temporary
files.

For Windows or Mac users with a compiler such as Metrowerks CodeWarrior or
Microsoft Visual C++, simply add "example.cpp" to an empty C++ console
application.  Compile and run to see the generator in action.  The "make"
command will not work, so the test programs must be run manually if desired.
The output should contain no error messages and the lists of random numbers
should exactly match those in "mt19937int.out", "mt19937-1.out", and
"mt19937-2.out".

If you encounter any problems, please e-mail a copy of the output and a
description of the test system to me at "rjwagner@writeme.com".  Any other
feedback is welcome too.


Installation
------------

Just copy the file "MersenneTwister.h" to your working directory or some other
place where your compiler can find it.  Put the following line at the top of
your program to access the MTRand class:

#include "MersenneTwister.h"


Contents
--------

README            - this file
COPYING           - GNU Lesser General Public License
MersenneTwister.h - declaration and implementation of MTRand class
example.cpp       - examples of using MTRand
Makefile          - instructions used by "make" command
testWagner.cpp    - tests MersenneTwister.h
testHinsch.cpp    - tests Hinsch's MT class
testOrigInt.c     - tests Nishimura's original MT program, integer version
testOrig-1.c      - tests Nishimura's original MT program, [0,1] version
testOrig-2.c      - tests Nishimura's original MT program, [0,1) version
testCokus.c       - tests Cokus's optimized MT program
testStd.c         - tests standard rand() function
testResults.sh    - shell script to interpret the output from tests
mtrand.h          - declaration of Hinsch's MT class
mtrand.cc         - implementation of Hinsch's MT class
mt19937int.c      - Nishimura's original MT program, integer version
mt19937-1.c       - Nishimura's original MT program, [0,1] version
mt19937-2.c       - Nishimura's original MT program, [0,1) version
cokus.c           - Cokus's optimized MT program
mt19937int.out    - standard reference for integer Mersenne Twister output
mt19937-1.out     - standard reference for [0,1] Mersenne Twister output
mt19937-2.out     - standard reference for [0,1) Mersenne Twister output
MersenneTwister.html - Web page about MersenneTwister.h
AntBlueMaize.jpg     - background for MersenneTwister.html
ArrowHome.gif        - home icon for MersenneTwister.html
main.css             - style sheet for MersenneTwister.html
